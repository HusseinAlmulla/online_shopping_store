{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Software Development\\\\WebDevelopment\\\\MyApps\\\\online_shopping_store\\\\front-end\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleWare from 'redux-thunk';\nimport { searchItemsReducer, requestSearchItemsReducer, requestUserLoginReducer } from './Components/Reducers.js';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './Components/fonsts/AnonymousPro-Bold.ttf';\nconst persistConfig = {\n  key: 'LoginReducer',\n  storage: storage,\n  whitelist: ['requestUserLoginReducer'] // which reducer want to store\n\n};\nconst rootReducers = combineReducers({\n  searchItemsReducer,\n  requestSearchItemsReducer,\n  requestUserLoginReducer\n});\nconst middleware = applyMiddleware(thunkMiddleWare);\nconst pReducer = persistReducer(persistConfig, rootReducers);\nconst store = createStore(pReducer, middleware);\nconst persistor = persistStore(store);\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["D:/Learning/Software Development/WebDevelopment/MyApps/online_shopping_store/front-end/src/index.js"],"names":["React","ReactDOM","serviceWorker","Provider","createStore","combineReducers","applyMiddleware","thunkMiddleWare","searchItemsReducer","requestSearchItemsReducer","requestUserLoginReducer","persistStore","persistReducer","App","persistConfig","key","storage","whitelist","rootReducers","middleware","pReducer","store","persistor","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,kBAAR,EAA4BC,yBAA5B,EAAuDC,uBAAvD,QAAqF,0BAArF;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAO,sCAAP;AACA,OAAO,aAAP;AACA,OAAO,2CAAP;AAGA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,cADe;AAEpBC,EAAAA,OAAO,EAAEA,OAFW;AAGpBC,EAAAA,SAAS,EAAE,CAAC,yBAAD,CAHS,CAGmB;;AAHnB,CAAtB;AAOA,MAAMC,YAAY,GAAGb,eAAe,CAAC;AAACG,EAAAA,kBAAD;AAAqBC,EAAAA,yBAArB;AAAgDC,EAAAA;AAAhD,CAAD,CAApC;AACA,MAAMS,UAAU,GAAGb,eAAe,CAACC,eAAD,CAAlC;AACA,MAAMa,QAAQ,GAAGR,cAAc,CAACE,aAAD,EAAgBI,YAAhB,CAA/B;AACA,MAAMG,KAAK,GAAGjB,WAAW,CAACgB,QAAD,EAAWD,UAAX,CAAzB;AACA,MAAMG,SAAS,GAAGX,YAAY,CAACU,KAAD,CAA9B;AAGApB,QAAQ,CAACsB,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAvB,aAAa,CAACwB,UAAd","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport {searchItemsReducer, requestSearchItemsReducer, requestUserLoginReducer} from './Components/Reducers.js';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport App from './App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport './Components/fonsts/AnonymousPro-Bold.ttf'\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'LoginReducer',\r\n  storage: storage,\r\n  whitelist: ['requestUserLoginReducer'] // which reducer want to store\r\n};\r\n\r\n\r\nconst rootReducers = combineReducers({searchItemsReducer, requestSearchItemsReducer, requestUserLoginReducer});\r\nconst middleware = applyMiddleware(thunkMiddleWare);\r\nconst pReducer = persistReducer(persistConfig, rootReducers);\r\nconst store = createStore(pReducer, middleware);\r\nconst persistor = persistStore(store);\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}