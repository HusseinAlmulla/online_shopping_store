{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Software Development\\\\WebDevelopment\\\\Apps\\\\mine\\\\online_shopping_store\\\\front-end\\\\src\\\\Components\\\\scripts\\\\CardsList.js\";\nimport React from 'react';\nimport ProductCard from './ProductCard.js';\nimport '../styles/ProductCard.css';\n\nclass CardsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      items: this.props.location.state.category\n    });\n    console.log(this.state.items);\n  }\n\n  fetchDB() {\n    const params = this.props.location.state;\n    let target = '';\n    params.category !== \"all\" ? target = 'products/category' : target = 'products';\n    fetch(`http://localhost:3000/${target}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(response => response.json()).then(items => this.setState({\n      items: items\n    }));\n  }\n\n  render() {\n    // this.fetchDB();\n    // console.log(this.state.items);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-grid\",\n      style: {\n        marginTop: '70px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'blue'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }\n    }) // this.state.items && this.state.items !== null && this.items !== undefined\n    // \t? this.state.items.map(item => (\n    // \t\t<ProductCard key={item.id} item={item} />))\n    // \t: this.state.items === 'No results found'\n    // \t\t? <div style={{ color: 'blue' }}>ERROR: data not found</div>\n    // \t\t: <div style={{ color: 'blue' }}>ERROR</div>\n    );\n  }\n\n}\n\nexport default CardsList;","map":{"version":3,"sources":["D:/Learning/Software Development/WebDevelopment/Apps/mine/online_shopping_store/front-end/src/Components/scripts/CardsList.js"],"names":["React","ProductCard","CardsList","Component","constructor","props","state","items","componentDidMount","setState","location","category","console","log","fetchDB","params","target","fetch","method","headers","body","JSON","stringify","then","response","json","render","marginTop","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAO,2BAAP;;AAGA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE;AADK,KAAb;AAGA;;AAEDC,EAAAA,iBAAiB,GAAE;AAClB,SAAKC,QAAL,CAAc;AACbF,MAAAA,KAAK,EAAC,KAAKF,KAAL,CAAWK,QAAX,CAAoBJ,KAApB,CAA0BK;AADnB,KAAd;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,KAAvB;AACA;;AACDO,EAAAA,OAAO,GAAG;AACT,UAAMC,MAAM,GAAG,KAAKV,KAAL,CAAWK,QAAX,CAAoBJ,KAAnC;AACA,QAAIU,MAAM,GAAG,EAAb;AACAD,IAAAA,MAAM,CAACJ,QAAP,KAAoB,KAApB,GACCK,MAAM,GAAG,mBADV,GAEGA,MAAM,GAAG,UAFZ;AAIAC,IAAAA,KAAK,CAAE,yBAAwBD,MAAO,EAAjC,EAAoC;AACxCE,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF+B;AAGxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,MAAf;AAHkC,KAApC,CAAL,CAIGQ,IAJH,CAIQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJpB,EAIqCF,IAJrC,CAI0ChB,KAAK,IAAI,KAAKE,QAAL,CAAc;AAAEF,MAAAA,KAAK,EAAEA;AAAT,KAAd,CAJnD;AAKA;;AAEDmB,EAAAA,MAAM,GAAG;AACR;AACA;AAEA,wBACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAKE;AACA;AACA;AACA;AACA;AACA;AAVF,KADD;AAeA;;AA/CsC;;AAmDxC,eAAe1B,SAAf","sourcesContent":["import React from 'react';\r\nimport ProductCard from './ProductCard.js';\r\nimport '../styles/ProductCard.css';\r\n\r\n\r\nclass CardsList extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\titems: null,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.setState({\r\n\t\t\titems:this.props.location.state.category\r\n\t\t})\r\n\t\tconsole.log(this.state.items)\r\n\t}\r\n\tfetchDB() {\r\n\t\tconst params = this.props.location.state\r\n\t\tlet target = '';\r\n\t\tparams.category !== \"all\" ?\r\n\t\t\ttarget = 'products/category'\r\n\t\t\t: target = 'products';\r\n\r\n\t\tfetch(`http://localhost:3000/${target}`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify(params),\r\n\t\t}).then(response => response.json()).then(items => this.setState({ items: items }))\r\n\t}\r\n\r\n\trender() {\r\n\t\t// this.fetchDB();\r\n\t\t// console.log(this.state.items);\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"container-grid\" style={{ marginTop: '70px' }}>\r\n\t\t\t\t{\r\n\t\t\t\t\t<div style={{ color: 'blue' }}>\r\n\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t// this.state.items && this.state.items !== null && this.items !== undefined\r\n\t\t\t\t\t// \t? this.state.items.map(item => (\r\n\t\t\t\t\t// \t\t<ProductCard key={item.id} item={item} />))\r\n\t\t\t\t\t// \t: this.state.items === 'No results found'\r\n\t\t\t\t\t// \t\t? <div style={{ color: 'blue' }}>ERROR: data not found</div>\r\n\t\t\t\t\t// \t\t: <div style={{ color: 'blue' }}>ERROR</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default CardsList;"]},"metadata":{},"sourceType":"module"}