{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleWare from 'redux-thunk';\nimport { searchItemsReducer, requestSearchItemsReducer, requestUserLoginReducer } from './Components/Reducers.js';\nimport { persistStore, persistReducer } from 'redux-persist';\nconst persistConfig = {\n  key: 'LoginReducer',\n  storage: storage,\n  whitelist: ['requestUserLoginReducer'] // which reducer want to store\n\n};\nconst rootReducers = combineReducers({\n  searchItemsReducer,\n  requestSearchItemsReducer,\n  requestUserLoginReducer\n});\nconst middleware = applyMiddleware(thunkMiddleWare);\nconst pReducer = persistReducer(persistConfig, rootReducers);\nconst store = createStore(pReducer, middleware);\nconst persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["D:/Learning/Software Development/WebDevelopment/MyApps/online_shopping_store/front-end/src/Components/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunkMiddleWare","searchItemsReducer","requestSearchItemsReducer","requestUserLoginReducer","persistStore","persistReducer","persistConfig","key","storage","whitelist","rootReducers","middleware","pReducer","store","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,kBAAR,EAA4BC,yBAA5B,EAAuDC,uBAAvD,QAAqF,0BAArF;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AAIA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,GAAG,EAAE,cADgB;AAErBC,EAAAA,OAAO,EAAEA,OAFY;AAGrBC,EAAAA,SAAS,EAAE,CAAC,yBAAD,CAHU,CAGkB;;AAHlB,CAAtB;AAOE,MAAMC,YAAY,GAAGZ,eAAe,CAAC;AAACG,EAAAA,kBAAD;AAAqBC,EAAAA,yBAArB;AAAgDC,EAAAA;AAAhD,CAAD,CAApC;AACA,MAAMQ,UAAU,GAAGZ,eAAe,CAACC,eAAD,CAAlC;AACA,MAAMY,QAAQ,GAAGP,cAAc,CAACC,aAAD,EAAgBI,YAAhB,CAA/B;AACA,MAAMG,KAAK,GAAGhB,WAAW,CAACe,QAAD,EAAWD,UAAX,CAAzB;AACA,MAAMG,SAAS,GAAGV,YAAY,CAACS,KAAD,CAA9B;AAEA,eAAe;AAACA,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport {searchItemsReducer, requestSearchItemsReducer, requestUserLoginReducer} from './Components/Reducers.js';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\n\r\n\r\n\r\nconst persistConfig = {\r\n\tkey: 'LoginReducer',\r\n\tstorage: storage,\r\n\twhitelist: ['requestUserLoginReducer'] // which reducer want to store\r\n  };\r\n  \r\n  \r\n  const rootReducers = combineReducers({searchItemsReducer, requestSearchItemsReducer, requestUserLoginReducer});\r\n  const middleware = applyMiddleware(thunkMiddleWare);\r\n  const pReducer = persistReducer(persistConfig, rootReducers);\r\n  const store = createStore(pReducer, middleware);\r\n  const persistor = persistStore(store);\r\n\r\n  export default {store, persistor}"]},"metadata":{},"sourceType":"module"}